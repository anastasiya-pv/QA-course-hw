JSON
 4. Создать внешний репозиторий c названием JSON:  открыть github.com как авторизированный пользователь, в поле "Recent repositories"  нажать зеленую кнопку "NEW".В новом окне заполнить обязательные поля "Owner"-anastasiya-pv,"Repository name"-JSON,указать тип репозитория "public" или "private"(в данном примере "public"), подтвердить опцию "add a README file".

 5. Клонировать репозиторий JSON на локальный компьютер:  в открытом репозитории нажать кнопку "Code",выбрать опцию "HTTPS" и скопировать отобразившуюся ссылку.Открыть git bash, указать путь к требуемой папке, ввести git clone https://github.com/anastasiya-pv/JSON.git  
  
 6. Внутри локального JSON создать файл “new.json”: открыть склонированный репозиторий(cd JSON) → touch new.json

 7. Добавить файл под гит:  git add new.json

 8. Закоммитить файл:  git commit -m "add new.json file"

 9. Отправить файл на внешний GitHub репозиторий: git push

 10. Отредактировать содержание файла “new.json” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате JSON:  cat >> new.json
{"Name and Surname":"Anastasiya Papliauko",
"The number of pets": "1",
"Expected salary":"500$"}
Используем сочетание клавиш "CTRL+C" для того, чтобы прервать процесс ввода данных в документ.

 11. Отправить изменения на внешний репозиторий: git add new.json -> git commit -m "new.json file editing" -> git push 

 12. Создать файл preferences.json: cat > preferences.json

 13. В файл preferences.json добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, страна которую хотели бы посетить) в формате JSON:
 cat >> preferences.json
{"My favorite film": "The finest hours",
"My favorite serial": "The master of sun",
"My favorite food": "Sushi",
"My favorite season": "Summer",
"What country would I like to visit": "Korea"}
Используем сочетание клавиш "CTRL+C" для того, чтобы прервать процесс ввода данных в документ.

 14. Создать файл skills.json добавить информацию о скиллах которые будут изучены на курсе в формате JSON: touch skills.json → vim skills.json → i →
{"Hard skills": ["The basic theory of Software Testing",
"Linux command line (terminal)/Git bash. GitHub",
"HTTP methods, requests, responses",
"JSON & XML",
"API testing via POSTMAN (GET, POST, PUT, DELETE, creating variables, writing simple autotests, checking response)",
"Creating Test cases, checklists, bug reports",
"Test Design Technics",
"Browser developer tools",
"Mobile testing basics",
"Android studio and ADB (android device manager)",
"Charles",
"Fiddler",
"SQL basics (create, delete, drop, insert into, select, from, where, join)",
"PostgreSQL database",
"Scrum",
"The basics of Python"]
}
Нажимем клавишу "ESC"→:wq→ нажимем клавишу "Enter"

 15. Отправить сразу 2 файла на внешний репозиторий: git add . → git commit -m "add skills.json and preferences.json files" → git push

 16. На веб интерфейсе создать файл bug_report.json: На github.com открыть репозиторий "JSON" → Нажать на кнопку "Add files",а затем выбрать "Create new files" в нисподающем окне → ввести bug_report.json в поле "name your file"

 17. Сделать Commit changes (сохранить) изменения на веб интерфейсе: внести пояснения к комиту(e.g. create bug_report.json) и указать ветку коммита → нажать "Commit new file"

 18. На веб интерфейсе модифицировать файл bug_report.json, добавить баг репорт в формате JSON:
в репозитории JSON выбрать файл bug_report.json → в открывшемся окне нажать кнопку "Edit this file" →  в поле "Edit file" ввести:
{"Bug Name": "Application \"NAME\" breaks down after clicking the \"PAY NOW\" button on the last step of product purchase",
"Bug ID": "It will be automatically generated after bug report saving",
"Tested on": "Android 10.0",
"Device" : "Samsung Galaxy S10",
"Environment" : "PROD",
"Severity": "Critical",
"Priority": "High",
"Assigned to": "Name",
"Reported by" : "Anastasiya -P", 
"Reported On": "18FEB22",

"Description": "Unable to finish the process of product purchase as apllication \"NAME\" breaks down upon clicking the \"PAY NOW\" button: the screen turns white and the application does not respond to user actions",
"Steps to Reproduce": {"1": "Open the Application",
"2": "Search for the required product",
"3": "Add the product to the cart by clicking  \"ADD\" button",
"4": "Fill out all required fields for product delivery",
"5": "Press the \"Purchase now\" button and select the option \"Pay by credit card\"",
"6": "Enter the credit card data",
"7": "Press the button \"PAY NOW\""},

"Expected Result": "Upon clicking the \"PAY NOW\"button  the money should be charged from user's credit card while the application should display the information about successfully created order",

"Actual Result": "Upon clicking the \"PAY NOW\" button the screen turns white and the application does not respond to user actions"
}

 19. Сделать Commit changes (сохранить) изменения на веб интерфейсе: Внести пояснения к комиту(e.g. update bug_report.json), указать ветку коммита → нажать "Commit new file"

 20. Синхронизировать внешний и локальный репозиторий JSON:  git pull 

XML
 21. Создать внешний репозиторий c названием XML: открыть github.com как авторизированный пользователь, в поле "Recent repositories"  нажать зеленую кнопку "NEW".В новом окне заполнить обязательные поля "Owner"-anastasiya-pv,"Repository name"-XML,указать тип репозитория "public" или "private"(в данном примере "public"), подтвердить опцию "add a README file".

 22. Клонировать репозиторий XML на локальный компьютер: в открытом репозитории нажать кнопку "Code",выбрать опцию "HTTPS" и скопировать отобразившуюся ссылку. Открыть git bash, указать путь к требуемой папке, ввести git clone https://github.com/anastasiya-pv/XML.git

 23. Внутри локального XML создать файл “new.xml”: открыть склонированный репозиторий(cd XML) → touch new.xml

 24. Добавить файл под гит:  git add new.xml

 25. Закоммитить файл: git commit -m "add new.xml file"

 26. Отправить файл на внешний GitHub репозиторий:  git push

 27. Отредактировать содержание файла “new.xml” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате XML:
cat >> new.xml
<?xml version="1.0" encoding="UTF-8"?>
<Document_XML>
<Name_and_Surname>Anastasiya Papliauko</Name_and_Surname>
<The_number_of_pets>1</The_number_of_pets>
<Expected_salary>500$</Expected_salary>
</Document_XML>
Используем сочетание клавиш "CTRL+C" для того, чтобы прервать процесс ввода данных в документ.

 28. Отправить изменения на внешний репозиторий: git add new.xml -> git commit -m "new.xml file editing" -> git push

 29. Создать файл preferences.xml:  touch preferences.xml

 30. В файл preferences.xml добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате XML:
cat >> preferences.xml
<?xml version="1.0" encoding="UTF-8"?>
<Preferences>
<My_favorite_film>The finest hours</My_favorite_film>
<My_favorite_serial>The master of sun</My_favorite_serial>
<My_favorite_food>Sushi</My_favorite_food>
<My_favorite_season>Summer</My_favorite_season>
<What_country_would_I_like_to_visit>Korea</What_country_would_I_like_to_visit>
</Preferences>
Используем сочетание клавиш "CTRL+C" для того, чтобы прервать процесс ввода данных в документ.

 31. Создать файл skills.xml добавить информацию о скиллах которые будут изучены на курсе в формате XML:
 touch skills.xml → vim skills.xml → i →
<?xml version="1.0" encoding="UTF-8"?>
<Hard_skills>
<First_line>The basic theory of Software Testing</First_line>
<Second_line>Linux command line (terminal)/Git bash.Github</Second_line>
<Third_line>HTTP methods, requests,responses</Third_line>
<Fouth_line>JSON and XML</Fouth_line>
<Fifth_line>API testing via POSTMAN(GET,POST,PUT,DELETE,creating variables,writing simple autotests,checking response)</Fifth_line>
<Sixth_line>Creating test cases,checklists,bug reports</Sixth_line>
<Seventh_line>Test Design Technics</Seventh_line>
<Eighth_line>Browser developer tools</Eighth_line>
<Ninth_line>Mobile testing basics</Ninth_line>
<Tenth_line>Android studio and ADB(android device manager)</Tenth_line>
<Eleventh_line>Charles</Eleventh_line>
<Twelfth_line>Fiddler</Twelfth_line>
<Thirteenth_line>SQL basics(create,delete,drop,insert into,select,from,where,join)</Thirteenth_line>
<Fourteenth_line>PostgreSQL database</Fourteenth_line>
<Fifteenth_line>Scrum</Fifteenth_line>
<Sixteenth_line>The basics of Python</Sixteenth_line>
</Hard_skills>
Нажимем клавишу "ESC"→:wq→ нажимем клавишу "Enter"

 32. Сделать коммит в одну строку: git add . && git commit -m "add skills.xml and preferences.xml files"

 33. Отправить сразу 2 файла на внешний репозиторий: git push

 34. На веб интерфейсе создать файл bug_report.xml: На github.com открыть репозиторий "XML" → Нажать на кнопку "Add files",а затем выбрать "Create new files" в нисподающем окне → ввести bug_report.xml в поле "name your file"

 35. Сделать Commit changes (сохранить) изменения на веб интерфейсе: внести пояснения к комиту(e.g. create bug_report.xml) и указать ветку коммита → нажать "Commit new file"

 36. На веб интерфейсе модифицировать файл bug_report.xml, добавить баг репорт в формате XML:
 в репозитории XML выбрать файл bug_report.xml→ в открывшемся окне выбрать кнопку "Edit this file" →  в поле "Edit file" ввести: 
<?xml version="1.0" encoding="UTF-8"?>
<Bug_report>
<Bug_Name>Application "NAME" breaks down after clicking the "PAY NOW" button on the last step of product purchase</Bug_Name>
<Bug_ID>It will be automatically generated after bug report saving</Bug_ID>
<Tested_on>Android 10.0</Tested_on>
<Device>Samsung Galaxy S10</Device>
<Environment>PROD</Environment> 
<Severity>Critical</Severity>
<Priority>High</Priority>
<Assigned_to>DeveloperX</Assigned_to>
<Reported_by>Name</Reported_by> 
<Reported_On>18FEB22</Reported_On>

<Description>Unable to finish the process of product purchase as apllication "NAME" breaks down upon clicking the "PAY NOW" button: the sceen turns white and the apllication does not respond to user actions</Description>
<Steps_to_Reproduce>
<First_step>1)Open the Application</First_step>
<Second_step>2)Search for the required product</Second_step>
<Third_step>3)Add the product to the cart by clicking "ADD" button</Third_step>
<Fourth_step>4)Fill out all reqired fields for product delivery</Fourth_step>
<Fifth_step>5)Press the "Purchase now" button and select the option "Pay by credit card"</Fifth_step>
<Six_step>6)Enter the credit card data</Six_step>
<Seven_step>7)Press the button "PAY NOW"</Seven_step>
</Steps_to_Reproduce>
<Expected_Result>On clicking the "PAY NOW" button  the money should be charged from user's credit card while the application displays the information about successfully created order</Expected_Result>
<Actual_Result>Upon clicking the "PAY NOW" button the screen turns white and the application does not respond to user actions</Actual_Result>
</Bug_report>

 37. Сделать Commit changes (сохранить) изменения на веб интерфейсе: Внести пояснения к комиту(e.g. update bug_report.xml), указать ветку коммита → нажать "Commit new file"

 38. Синхронизировать внешний и локальный репозиторий XML:  git pull

TXT
 1. Создать внешний репозиторий c названием TXT: открыть github.com как авторизированный пользователь, в поле "Recent repositories"  нажать зеленую кнопку "NEW".В новом окне заполнить обязательные поля "Owner"-anastasiya-pv,"Repository name"-TXT,указать тип репозитория "public" или "private"(в данном примере "public"), подтвердить опцию "add a README file".
 2. Клонировать репозиторий TXT на локальный компьютер: в открытом репозитории нажать кнопку "Code",выбрать опцию "HTTPS" и скопировать отобразившуюся ссылку. Открыть git bash, указать путь к требуемой папке, ввести git clone https://github.com/anastasiya-pv/TXT.git

 3. Внутри локального TXT создать файл “new.txt”:  открыть склонированный репозиторий(cd TXT) → touch new.txt

 4. Добавить файл под гит:  git add new.txt

 5. Закоммитить файл: git commit -m "add new.txt file"

 6. Отправить файл на внешний GitHub репозиторий: git push

 7. Отредактировать содержание файла “new.txt” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате TXT:
cat >> new.txt
My name is Anastasiya Papliauko.
I have only one pet.
I expect to earn not less than 500$ per month as QA junior engineer.
Используем сочетание клавиш "CTRL+C" для того, чтобы прервать процесс ввода данных в документ.

 8. Отправить изменения на внешний репозиторий:  git add new.txt → git commit -m "new.txt file editing" → git push  

 9. Создать файл preferences.txt:  touch preferences.txt

 10. В файл preferences.txt” добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате TXT:
cat >> preferences.txt
My favorite film is "The finest hours" while my favorite serial is "The master of sun".
My favourite food is sushi and I like summer more than other seasons. 
I would like to visit Korea once again or any  other Asian countries. 
Используем сочетание клавиш "CTRL+C" для того, чтобы прервать процесс ввода данных в документ.

 11. Создать файл skills.txt добавить информацию о скиллах которые будут изучены на курсе в формате TXT:
touch skills.txt → vim skills.txt → i →
Hard skills are as follows: 
1.The basic theory of Software Testing
2.Linux command line (terminal)/Git bash.Github
3.HTTP methods, requests,responses
4.JSON & XML
5.API testing via POSTMAN(GET,POST,PUT,DELETE,creating variables,writing simple autotests,checking response)
6.Creating Test cases,checklists,bug reports
7.Test Design Technics
8.Browser developer tools
9.Mobile testing basics
10.Android studio and ADB(android device manager)
11.Charles
12.Fiddler
13.SQL basics(create,delete,drop,insert into,select,from,where,join)
14.PostgreSQL database
15.Scrum
16.The basics of Python
Нажимем клавишу "ESC"→:wq→ нажимем клавишу "Enter"

 12. Сделать коммит в одну строку: git add . &&  git commit -m "add skills.txt and preferences.txt files"

 13. Отправить сразу 2 файла на внешний репозиторий: git push

 14. На веб интерфейсе создать файл bug_report.txt: На github.com открыть репозиторий "TXT" → Нажать на кнопку "Add files",а затем выбрать "Create new files" в нисподающем окне → ввести bug_report.txt в поле "name your file" 

 15. Сделать Commit changes (сохранить) изменения на веб интерфейсе: Внести пояснения к комиту(e.g. create bug_report.txt) и указать ветку коммита → нажать "Commit new file"

 16. На веб интерфейсе модифицировать файл bug_report.txt, добавить баг репорт в формате TXT:
 В репозитории TXT выбрать файл bug_report.txt→ в открывшемся окне выбрать кнопку "Edit this file" →  в поле "Edit file" ввести: 
Bug Name: Application "NAME" breaks down after clicking the "PAY NOW" button on the last step of product purchase
Bug ID: It will be automatically generated after bug report saving
Tested on: Android 10.0
Device: Samsung Galaxy S10
Environment: PROD
Severity: Critical
Priority: High
Assigned to: "Name"
Reported by: Anastasiya-P 
Reported On: 18FEB22


Description: Unable to finish the process of product purchase as apllication "NAME" breaks down upon clicking the "PAY NOW" button: the screen turns white and the application does not respond to user actions"
Steps to Reproduce: 
1)Open the Application,
2)Search for the required product,
3)Add the product to the cart by clicking  "ADD" button",
4)Fill out all required fields for product delivery,
5)Press the "Purchase now" button and select the option "Pay by credit card",
6)Enter the credit card data,
7)Press the button "PAY NOW".

Expected Result: Upon clicking the "PAY NOW" button  the money should be charged from user's credit card while the application should display the information about successfully created order.

Actual Result: Upon clicking the "PAY NOW" button the screen turns white and the application does not respond to user actions.

 17. Сделать Commit changes (сохранить) изменения на веб интерфейсе: Внести пояснения к комиту(e.g. update bug_report.txt), указать ветку коммита → нажать "Commit new file"

 18. Синхронизировать внешний и локальный репозиторий TXT: git pull

 
